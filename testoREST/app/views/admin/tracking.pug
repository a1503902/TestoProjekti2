extends ../layouts/admin.pug

block content
	h1.ui.dividing.header Seuranta
	//button(data-action="show-delivery-employee").ui.orange.button Näytä toimitukset by employee
	table.ui.celled.structured.table#deliveries-table
		thead
			tr
				th(rowspan=2) Työntekijä
				th(rowspan=2) Päivä
				th(rowspan=2) Auto
				th(rowspan=2) Reitti
				th(colspan=4) Postnord
				th(colspan=4) Bring
				th(colspan=2) Innight
				th(rowspan=2) Tehot
			tr
				th Jaot
				th Noudot
				th NT
				th Tuntemattomat
				th Jaot
				th Noudot
				th NT
				th Tuntemattomat
				th Paketit
				th Stopit
		tbody
			tr
				td(colspan="15") Ei toimituksia

block scripts
	script.
		function loadDeliveries(){
			$.ajax({
				url: "http://localhost:8080/api/workdays",
				method: "GET",
				type: "JSON",
					success: function(response){
						if(!!response.success && response.success == true){
							if(response.data.length > 0){
								$("#deliveries-table tbody").html("");
								for(var i = 0; i < response.data.length; i++){
									var data = response.data[i];
									var row  = $('<tr />');
									$("#deliveries-table tbody").append(row);
									if(data.complete == true){
										row.append('<td>' + setDefaultVal(data.employee, '-') + '</td>');
										row.append('<td>' + setDefaultVal(data.created_at, '-') + '</td>');
										row.append('<td>' + setDefaultVal(data.car, '-') + '</td>');
										row.append('<td>' + setDefaultVal(data.route, '-') + '</td>');

										// Postnord
										row.append('<td>' + setDefaultVal(data.deliveries.postnord.delivery, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.postnord.pickup, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.postnord.unknown, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.postnord.nt, 0) + '</td>');

										// Bring
										row.append('<td>' + setDefaultVal(data.deliveries.bring.delivery, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.bring.pickup, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.bring.dhl_return, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.bring.nt, 0) + '</td>');


										// Innight
										row.append('<td>' + setDefaultVal(data.deliveries.innight.packages, 0) + '</td>');
										row.append('<td>' + setDefaultVal(data.deliveries.innight.stops, 0) + '</td>');

										// Efficiency
										row.append('<td>' + calcEff(data).toFixed(4) + '</td>');
									}
								}
							}
						}else{
							alert("Failed to load data: " + data.message);
						}
					},
					error: function(err){
						alert("Failed to load data: " + JSON.stringify(err));
					}
				});
			}

			$(function(){
				loadDeliveries();
			});

			function calcEff(data) {
				var pD = data.deliveries.postnord.delivery;
				var pP = data.deliveries.postnord.pickup;
				var pU = data.deliveries.postnord.unknown;
				var pNt = data.deliveries.postnord.nt;
				var bD = data.deliveries.bring.delivery;
				var bP = data.deliveries.bring.pickup;
				var bDhl = data.deliveries.bring.unknown;
				var bNt = data.deliveries.bring.nt;
				var time = (data.stop_time - data.start_time) - data.breaks;
				var ifNull = [pD, pP, pU, pNt, bD, bP, bDhl, bNt];
				var sum;
				for (var i = 0; i < ifNull.length; i++) {
					if (ifNull[i] == null) {
						ifNull[i] = 0;
					}
					if (!ifNull[0]) {
						sum = ifNull[i] + ifNull[i - 1];
					} else {
						sum = ifNull[0];
					}
				}

				var efficiency = sum / time;
				return efficiency;
			}

			function setDefaultVal(value, defaultValue){
				return (value === undefined) ? defaultValue : (value == null) ? defaultValue : value;
			}
